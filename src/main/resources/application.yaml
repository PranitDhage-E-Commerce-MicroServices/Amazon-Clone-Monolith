#Tomcat server port number = 8080, context-path = /
server:
  port: 8080
  servlet:
    context-path: /api/v1
  forward-headers-strategy: framework

#DB properties
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/amazoneclone?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
# JPA properties
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
    database: MYSQL
    database-platform: org.hibernate.dialect.MySQL8Dialect
  # Spring Security Basic Auth
  security:
    user.name: root
    user.password: root

#Logger Colour Output
    open-in-view: false
  output:
    ansi:
      enabled: detect

# Redis Caching Properties
  cache:
    type: redis
    host: localhost
    port: 6379
    redis:
      time-to-live: 60000
      cache-null-values: true
#logging.level.org.springframework.orm.hibernate5=DEBUG
logging:
  file:
    name: "logs/app.log"
    path: "."
  pattern:
    level: "[%-5level] %logger{36}.%M.[%line]"
    dateformat: "yyyy-MM-dd HH:mm:ss"
    correlation: "[%X{reqId}] - "

# General Fields
jdbc:
  username: root

# JWT Properties
application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
      expiration: 86400000 # a day
      refresh-token:
        expiration: 604800000 # 7 days

# Swagger Properties
springdoc:
  swagger-ui:
    path: /swagger-ui/index.html
    url: /v3/api-docs
    enabled: true
    default-model-expand-depth: -1
  packages-to-scan: com.web.ecomm.app.controller